<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sl.ylyy.app_1.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sl.ylyy.app_1.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="portrait" jdbcType="VARCHAR" property="portrait" />
    <result column="create_at" jdbcType="INTEGER" property="createAt" />
    <result column="update_at" jdbcType="INTEGER" property="updateAt" />
    <result column="allow_login" jdbcType="INTEGER" property="allowLogin" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_number, login_name, user_name, email, phone, cellphone, password, portrait, 
    create_at, update_at, allow_login, is_delete, company_id, department_id, group_id
  </sql>

  <select id="selectUserMap" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
      u.id as user_id,u.user_name,u.login_name,u.job_number,u.email,u.phone,u.cellphone,
      from_unixtime(u.create_at,'%Y-%m-%d %T') as create_at,
      from_unixtime(u.update_at,'%Y-%m-%d %T') as update_at,
      u.company_id,c.cname as company_name,u.department_id,
      u.group_id,u.rong_token,u.rong_user_id,r.id as role_id,r.name as role_name,u.portrait,
      c.rong_group_id as company_rong_group_id,c.notice_rong_group_id,
			d.dname department_name,g.`name` group_name,u.center_project_user_id,u.center_project_id,r.center_role_id
    from user u
    left join user_role_relation url on u.id=url.user_id
    left join role r on r.id=url.role_id
    left join company c on c.id=u.company_id
	left join department d on d.id=u.department_id
	left join `group` g on g.id=u.group_id
    where u.id=#{id} and u.is_delete=2
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectUserNameById" parameterType="java.lang.Integer" resultType="java.lang.String">
    select user_name
    from user
    where id=#{id}
  </select>

  <select id="selectUserByCellPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where cellphone = #{account,jdbcType=INTEGER}
    and is_delete=2
  </select>

  <select id="selectStorekeepers" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.id,u.user_name as name
    from user u
    left join user_role_relation url on u.id=url.user_id
    left join role r on r.id=url.role_id
    where r.id=6
    and u.company_id=#{companyId} and u.is_delete=2
  </select>

  <select id="selectUserNameByIds" parameterType="java.util.List" resultType="java.util.Map">
    select user_name as `name`
    from user
    where id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and is_delete=2
  </select>

  <select id="selectUidsByCompanyId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select id from user where company_id = #{companyId} and is_delete=2
  </select>

  <select id="selectUidsByDepartmentId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select id from user where department_id = #{departmentId} and is_delete=2
  </select>

  <select id="selectUidsByGroupId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select id from user where group_id = #{groupId} and is_delete=2
  </select>

  <select id="selectUserById" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where u.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="elcmSelectUserById" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.center_project_user_id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where u.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectUsersByGroupId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where u.group_id = #{groupId,jdbcType=INTEGER} and u.is_delete=2
  </select>

  <select id="elcmSelectUsersByGroupId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.center_project_user_id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where u.group_id = #{groupId,jdbcType=INTEGER} and u.is_delete=2
  </select>

  <select id="selectUsersByRid" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where urr.role_id = #{roleId,jdbcType=INTEGER} and u.is_delete=2
  </select>

  <select id="elcmSelectUsersByRid" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    u.center_project_user_id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where urr.role_id = #{roleId,jdbcType=INTEGER} and u.is_delete=2
  </select>

  <select id="elcmSelectDeparmentManagersByRid" parameterType="java.util.Map" resultType="java.util.Map">
    select
    u.center_project_user_id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where urr.role_id = #{roleId,jdbcType=INTEGER} and u.department_id = #{departmentId} and u.is_delete=2
  </select>

  <select id="selectDeparmentManagersByRid" parameterType="java.util.Map" resultType="java.util.Map">
    select
    u.id as uid,u.user_name as uname,urr.role_id as rid
    from user u
    left join user_role_relation urr on u.id=urr.user_id
    where urr.role_id = #{roleId,jdbcType=INTEGER} and u.department_id = #{departmentId} and u.is_delete=2
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sl.ylyy.app_1.entity.User">
    insert into user (id, job_number, login_name,
      user_name, email, phone, 
      cellphone, password, portrait, 
      create_at, update_at, allow_login, 
      is_delete, company_id, department_id, 
      group_id)
    values (#{id,jdbcType=INTEGER}, #{jobNumber,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{cellphone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=INTEGER}, #{updateAt,jdbcType=INTEGER}, #{allowLogin,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{groupId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sl.ylyy.app_1.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="portrait != null">
        portrait,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="allowLogin != null">
        allow_login,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null">
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=INTEGER},
      </if>
      <if test="allowLogin != null">
        #{allowLogin,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sl.ylyy.app_1.entity.User">
    update user
    <set>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null">
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=INTEGER},
      </if>
      <if test="allowLogin != null">
        allow_login = #{allowLogin,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sl.ylyy.app_1.entity.User">
    update user
    set job_number = #{jobNumber,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      portrait = #{portrait,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=INTEGER},
      allow_login = #{allowLogin,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>